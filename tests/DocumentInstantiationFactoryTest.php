<?php

declare(strict_types=1);

namespace JSONAPI\Test;

use Doctrine\Common\Cache\ArrayCache;
use JSONAPI\DocumentBuilder;
use JSONAPI\DocumentBuilderFactory;
use JSONAPI\Driver\AnnotationDriver;
use JSONAPI\Metadata\MetadataFactory;
use JSONAPI\Metadata\MetadataRepository;
use JSONAPI\Uri\UriParser;
use PHPUnit\Framework\TestCase;
use Roave\DoctrineSimpleCache\SimpleCacheAdapter;
use Slim\Psr7\Factory\ServerRequestFactory;

class DocumentInstantiationFactoryTest extends TestCase
{

    public static MetadataRepository $metadata;

    public static function setUpBeforeClass(): void
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
        self::$metadata = MetadataFactory::create(
            [RESOURCES . '/valid'],
            new SimpleCacheAdapter(new ArrayCache()),
            new AnnotationDriver()
        );
    }

    public function testNew()
    {
        $baseUrl  = 'http://unit.test.org';
        $request  = ServerRequestFactory::createFromGlobals();
        $factory  = new DocumentBuilderFactory(self::$metadata, $baseUrl);
        $composer = $factory->new($request);
        $this->assertInstanceOf(DocumentBuilder::class, $composer);
    }

    public function testGetURIParser()
    {
        $baseUrl = 'http://unit.test.org';
        $request = ServerRequestFactory::createFromGlobals();
        $factory = new DocumentBuilderFactory(self::$metadata, $baseUrl);
        $null    = $factory->getURIParser();
        $this->assertNull($null);
        $factory->new($request);
        $this->assertInstanceOf(UriParser::class, $factory->getURIParser());
    }
}
